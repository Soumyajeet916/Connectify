// This file simulates a Next.js application structure.
// In a real project, each page (LoginPage, FeedPage, etc.) would be in its own file
// within the 'pages' or 'app' directory, and the navigation would be handled by a router.

import { useState } from 'react';
import { Home, User, Search, Bell, MessageSquare, PlusCircle, LogIn, UserPlus } from 'lucide-react';

// Main App Component
const App = () => {
  // We use state to manage the current view, simulating navigation
  const [currentView, setCurrentView] = useState('login');
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  // Dummy user data for the demonstration
  const user = {
    name: 'Jane Doe',
    handle: '@janedoe',
    avatar: 'https://placehold.co/40x40/4F46E5/ffffff?text=JD',
    coverImage: 'https://placehold.co/1200x300/D1D5DB/1F2937?text=Profile+Header',
    bio: 'Software developer and cat lover. Building things with React and Tailwind.',
    followers: '1.2K',
    following: '345',
    posts: [
      { id: 1, user: 'Jane Doe', handle: '@janedoe', avatar: 'https://placehold.co/40x40/4F46E5/ffffff?text=JD', content: "Just launched a new project! So excited to see what you all think. #webdev #react", image: 'https://placehold.co/600x400/D1D5DB/1F2937?text=Project+Launch', likes: 124, comments: 23, shares: 10, timestamp: '2h ago' },
      { id: 2, user: 'Jane Doe', handle: '@janedoe', avatar: 'https://placehold.co/40x40/4F46E5/ffffff?text=JD', content: "Enjoying a beautiful sunset after a productive day of coding. ï¿½ #sunset #codinglife", image: null, likes: 78, comments: 11, shares: 5, timestamp: '5h ago' },
      { id: 3, user: 'Jane Doe', handle: '@janedoe', avatar: 'https://placehold.co/40x40/4F46E5/ffffff?text=JD', content: "Coffee and code, the perfect combination. â˜•ðŸ’»", image: 'https://placehold.co/600x400/9CA3AF/1F2937?text=Coffee+%26+Code', likes: 201, comments: 45, shares: 18, timestamp: '1d ago' },
    ]
  };

  // Function to handle view changes
  const handleNavigation = (view) => {
    setCurrentView(view);
    setIsMenuOpen(false); // Close the mobile menu after a selection
  };

  // Reusable component for desktop navigation buttons
  const NavButton = ({ view, icon, label }) => (
    <button
      onClick={() => handleNavigation(view)}
      className={`flex items-center p-3 rounded-xl w-full text-left transition-colors ${
        currentView === view ? 'bg-indigo-500 text-white shadow-lg' : 'hover:bg-gray-200 text-gray-700'
      }`}
    >
      {icon}
      <span className="ml-4 font-semibold">{label}</span>
    </button>
  );

  // Reusable component for mobile navigation buttons
  const MobileNavButton = ({ view, icon, label }) => (
    <button
      onClick={() => handleNavigation(view)}
      className={`flex flex-col items-center flex-1 p-2 text-sm transition-colors ${
        currentView === view ? 'text-indigo-600' : 'text-gray-500 hover:text-indigo-600'
      }`}
    >
      {icon}
      <span className="mt-1 text-xs">{label}</span>
    </button>
  );

  // A function to render the correct "page" component based on state
  const renderView = () => {
    switch (currentView) {
      case 'login':
        return <LoginPage handleNavigation={handleNavigation} />;
      case 'signup':
        return <SignUpPage handleNavigation={handleNavigation} />;
      case 'feed':
        return <FeedPage user={user} />;
      case 'profile':
        return <ProfilePage user={user} />;
      default:
        return <LoginPage handleNavigation={handleNavigation} />;
    }
  };

  // LoginPage Component - In a real Next.js app, this would be `pages/login.js`
  const LoginPage = ({ handleNavigation }) => (
    <div className="flex items-center justify-center min-h-screen bg-gray-100 p-4">
      <div className="w-full max-w-md bg-white rounded-2xl shadow-xl p-8 transform transition-transform duration-300 hover:scale-105">
        <div className="text-center">
          <h1 className="text-4xl font-extrabold text-gray-800 tracking-tight">SocialSphere</h1>
          <p className="mt-2 text-gray-500">Log in to your account</p>
        </div>
        <form className="mt-8 space-y-6">
          <div>
            <label className="block text-sm font-medium text-gray-700">Email address</label>
            <input type="email" required className="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 transition-colors" />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Password</label>
            <input type="password" required className="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 transition-colors" />
          </div>
          <div className="flex items-center justify-between">
            <div className="flex items-center">
              <input type="checkbox" className="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500" />
              <label className="ml-2 block text-sm text-gray-900">Remember me</label>
            </div>
            <a href="#" className="text-sm font-medium text-indigo-600 hover:text-indigo-500">Forgot your password?</a>
          </div>
          <div>
            <button
              type="submit"
              onClick={() => handleNavigation('feed')}
              className="w-full flex justify-center py-3 px-4 border border-transparent rounded-xl shadow-sm text-sm font-bold text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-all transform hover:scale-105"
            >
              Sign in
            </button>
          </div>
        </form>
        
        {/* Separator for social login */}
        <div className="flex items-center my-6">
          <div className="flex-grow border-t border-gray-300"></div>
          <span className="flex-shrink mx-4 text-gray-500">or</span>
          <div className="flex-grow border-t border-gray-300"></div>
        </div>

        {/* Social login buttons */}
        <div>
          <button
            onClick={() => handleNavigation('feed')}
            className="w-full flex justify-center items-center py-3 px-4 border border-gray-300 rounded-xl shadow-sm text-sm font-bold text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-all transform hover:scale-105"
          >
            <svg className="w-5 h-5 mr-3" viewBox="0 0 48 48">
              <path fill="#EA4335" d="M24 9.5c3.27 0 5.86.9 7.7 2.65l6.05-6.05C33.15 2.6 28.92 1 24 1 15.6 1 8.35 5.88 4.6 13.56L12.56 18c2.1-6.17 7.74-10.5 11.44-10.5z"/>
              <path fill="#4285F4" d="M46.88 23.36c-.1-1.57-.2-2.92-.48-4.24H24v7.7h13.2c-.67 3.3-2.58 6.07-5.38 8.05l5.5 4.25c3.34-3.1 5.3-7.55 5.3-13.7zm-22.88 1.9h13.2c-.67 3.3-2.58 6.07-5.38 8.05l5.5 4.25c3.34-3.1 5.3-7.55 5.3-13.7z"/>
              <path fill="#FBBC04" d="M11.44 29.8C9.5 28.53 7.9 26.5 6.96 24h-7.8c1.37 4.2 3.92 7.7 7.15 10.15l5.5-4.25z"/>
              <path fill="#34A853" d="M24 47c5.1 0 9.77-1.74 13.04-4.65l-5.5-4.25c-2.48 1.83-5.6 2.9-8.54 2.9-7.07 0-13.1-4.75-15.3-11.25L4.6 34.56c3.75 7.68 11.02 12.44 19.4 12.44z"/>
              <path fill="none" d="M0 0h48v48H0z"/>
            </svg>
            Sign in with Google
          </button>
        </div>
      </div>
    </div>
  );

  // SignUpPage Component - In a real Next.js app, this would be `pages/signup.js`
  const SignUpPage = ({ handleNavigation }) => (
    <div className="flex items-center justify-center min-h-screen bg-gray-100 p-4">
      <div className="w-full max-w-md bg-white rounded-2xl shadow-xl p-8 transform transition-transform duration-300 hover:scale-105">
        <div className="text-center">
          <h1 className="text-4xl font-extrabold text-gray-800 tracking-tight">SocialSphere</h1>
          <p className="mt-2 text-gray-500">Create a new account</p>
        </div>
        <form className="mt-8 space-y-6">
          <div>
            <label className="block text-sm font-medium text-gray-700">Full Name</label>
            <input type="text" required className="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Email address</label>
            <input type="email" required className="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Password</label>
            <input type="password" required className="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Confirm Password</label>
            <input type="password" required className="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
          </div>
          <div>
            <button
              type="submit"
              onClick={() => handleNavigation('feed')}
              className="w-full flex justify-center py-3 px-4 border border-transparent rounded-xl shadow-sm text-sm font-bold text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-all transform hover:scale-105"
            >
              Sign up
            </button>
          </div>
        </form>

        {/* Separator for social login */}
        <div className="flex items-center my-6">
          <div className="flex-grow border-t border-gray-300"></div>
          <span className="flex-shrink mx-4 text-gray-500">or</span>
          <div className="flex-grow border-t border-gray-300"></div>
        </div>

        {/* Social login buttons */}
        <div>
          <button
            onClick={() => handleNavigation('feed')}
            className="w-full flex justify-center items-center py-3 px-4 border border-gray-300 rounded-xl shadow-sm text-sm font-bold text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-all transform hover:scale-105"
          >
            <svg className="w-5 h-5 mr-3" viewBox="0 0 48 48">
              <path fill="#EA4335" d="M24 9.5c3.27 0 5.86.9 7.7 2.65l6.05-6.05C33.15 2.6 28.92 1 24 1 15.6 1 8.35 5.88 4.6 13.56L12.56 18c2.1-6.17 7.74-10.5 11.44-10.5z"/>
              <path fill="#4285F4" d="M46.88 23.36c-.1-1.57-.2-2.92-.48-4.24H24v7.7h13.2c-.67 3.3-2.58 6.07-5.38 8.05l5.5 4.25c3.34-3.1 5.3-7.55 5.3-13.7zm-22.88 1.9h13.2c-.67 3.3-2.58 6.07-5.38 8.05l5.5 4.25c3.34-3.1 5.3-7.55 5.3-13.7z"/>
              <path fill="#FBBC04" d="M11.44 29.8C9.5 28.53 7.9 26.5 6.96 24h-7.8c1.37 4.2 3.92 7.7 7.15 10.15l5.5-4.25z"/>
              <path fill="#34A853" d="M24 47c5.1 0 9.77-1.74 13.04-4.65l-5.5-4.25c-2.48 1.83-5.6 2.9-8.54 2.9-7.07 0-13.1-4.75-15.3-11.25L4.6 34.56c3.75 7.68 11.02 12.44 19.4 12.44z"/>
              <path fill="none" d="M0 0h48v48H0z"/>
            </svg>
            Sign up with Google
          </button>
        </div>
        <div className="mt-6 text-center">
          <p className="text-sm text-gray-600">
            Already have an account?{' '}
            <a onClick={() => handleNavigation('login')} className="font-medium text-indigo-600 hover:text-indigo-500 cursor-pointer">
              Sign in
            </a>
          </p>
        </div>
      </div>
    </div>
  );

  // Post Component
  const Post = ({ post }) => (
    <div className="bg-white rounded-2xl shadow-sm p-5 mb-4 border border-gray-200">
      <div className="flex items-center mb-4">
        <img src={post.avatar} alt={`${post.user}'s avatar`} className="w-10 h-10 rounded-full" />
        <div className="ml-3">
          <p className="font-bold text-gray-900">{post.user}</p>
          <p className="text-sm text-gray-500">{post.handle} Â· {post.timestamp}</p>
        </div>
      </div>
      <p className="text-gray-800 mb-4">{post.content}</p>
      {post.image && (
        <div className="bg-gray-100 rounded-xl overflow-hidden mb-4">
          <img src={post.image} alt="Post content" className="w-full h-auto object-cover" />
        </div>
      )}
      <div className="flex justify-between text-sm text-gray-500 border-t border-gray-100 pt-4">
        <div className="flex space-x-4">
          <button className="flex items-center space-x-1 hover:text-indigo-600 transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-heart">
              <path d="M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z"/>
            </svg>
            <span>{post.likes}</span>
          </button>
          <button className="flex items-center space-x-1 hover:text-indigo-600 transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-message-circle">
              <path d="M7.9 20A9.3 9.3 0 0 1 4 16.1V15a9 9 0 1 1 12.1 4l-.9.9V20a9 9 0 0 1-5.3 1.9Z"/>
              <path d="M21 15a9 9 0 1 0-9 9c1.9 0 3.8-.5 5.3-1.4l.9-.9v.9l-2.4 2.4"/>
            </svg>
            <span>{post.comments}</span>
          </button>
        </div>
        <button className="flex items-center space-x-1 hover:text-indigo-600 transition-colors">
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-repeat">
            <path d="m17 2v4a2 2 0 0 1-2 2H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4"/>
            <path d="m14 16-3 3 3 3"/>
            <path d="M10 22v-4a2 2 0 0 1 2-2h9a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-4"/>
            <path d="m7 2-3 3 3 3"/>
          </svg>
          <span>{post.shares}</span>
        </button>
      </div>
    </div>
  );

  // FeedPage Component - In a real Next.js app, this would be `pages/index.js` or `pages/feed.js`
  const FeedPage = ({ user }) => (
    <div className="flex-1 flex-col overflow-y-auto">
      <div className="sticky top-0 z-10 bg-white border-b border-gray-200 p-4 lg:hidden">
        <div className="flex items-center justify-between">
          <h2 className="text-xl font-bold">Feed</h2>
          <button onClick={() => setIsMenuOpen(!isMenuOpen)} className="p-2 rounded-full hover:bg-gray-100">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-menu">
              <line x1="4" x2="20" y1="12" y2="12"></line>
              <line x1="4" x2="20" y1="6" y2="6"></line>
              <line x1="4" x2="20" y1="18" y2="18"></line>
            </svg>
          </button>
        </div>
      </div>
      <div className="p-4 sm:p-6 lg:p-8 max-w-2xl mx-auto">
        <div className="bg-white rounded-2xl shadow-sm p-4 mb-6 flex items-center space-x-3 border border-gray-200">
          <img src={user.avatar} alt="User avatar" className="w-12 h-12 rounded-full" />
          <input
            type="text"
            placeholder="What's on your mind?"
            className="flex-1 p-3 rounded-xl bg-gray-100 border-none focus:ring-2 focus:ring-indigo-500 focus:bg-white"
          />
          <button className="bg-indigo-500 text-white rounded-full p-2 hover:bg-indigo-600 transition-colors">
            <PlusCircle />
          </button>
        </div>
        {user.posts.map(post => (
          <Post key={post.id} post={post} />
        ))}
      </div>
    </div>
  );

  // ProfilePage Component - In a real Next.js app, this would be `pages/profile.js`
  const ProfilePage = ({ user }) => (
    <div className="flex-1 flex-col overflow-y-auto">
      <div className="relative">
        <img src={user.coverImage} alt="Cover image" className="w-full h-48 object-cover" />
        <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 p-2 rounded-full bg-white bg-opacity-70">
          <img src={user.avatar} alt="User avatar" className="w-24 h-24 rounded-full border-4 border-white shadow-lg" />
        </div>
      </div>
      <div className="bg-white p-6 pb-2 text-center -mt-12 rounded-t-3xl relative z-10">
        <h2 className="text-2xl font-bold text-gray-900 mt-4">{user.name}</h2>
        <p className="text-gray-500">{user.handle}</p>
        <p className="text-gray-700 mt-4 max-w-md mx-auto">{user.bio}</p>
        <div className="flex justify-center space-x-6 mt-4 font-semibold text-gray-800">
          <p>
            <span className="font-bold text-lg">{user.followers}</span> Followers
          </p>
          <p>
            <span className="font-bold text-lg">{user.following}</span> Following
          </p>
        </div>
        <div className="flex justify-center mt-6 space-x-4">
          <button className="bg-indigo-500 text-white font-bold py-2 px-6 rounded-full hover:bg-indigo-600 transition-colors">
            Follow
          </button>
          <button className="border border-gray-300 text-gray-700 font-bold py-2 px-6 rounded-full hover:bg-gray-100 transition-colors">
            Message
          </button>
        </div>
      </div>
      <div className="p-4 sm:p-6 lg:p-8 max-w-2xl mx-auto">
        <h3 className="text-xl font-bold text-gray-800 mb-4">Posts</h3>
        {user.posts.map(post => (
          <Post key={post.id} post={post} />
        ))}
      </div>
    </div>
  );

  return (
    <div className="font-sans antialiased text-gray-900 bg-gray-100 min-h-screen flex flex-col lg:flex-row">
      {/* Desktop Sidebar Navigation */}
      {(currentView !== 'login' && currentView !== 'signup') && (
        <aside className="hidden lg:flex w-64 p-4 flex-col bg-white border-r border-gray-200 sticky top-0 h-screen">
          <div className="flex items-center p-3 mb-8">
            <div className="w-10 h-10 rounded-full bg-indigo-500 flex items-center justify-center text-white font-bold">SS</div>
            <h1 className="text-2xl font-bold ml-3">SocialSphere</h1>
          </div>
          <nav className="space-y-2 flex-1">
            <NavButton view="feed" icon={<Home />} label="Feed" />
            <NavButton view="profile" icon={<User />} label="Profile" />
            <NavButton view="search" icon={<Search />} label="Search" />
            <NavButton view="notifications" icon={<Bell />} label="Notifications" />
            <NavButton view="messages" icon={<MessageSquare />} label="Messages" />
          </nav>
        </aside>
      )}

      {/* Main Content Area */}
      <main className="flex-1 flex flex-col">
        {renderView()}
      </main>

      {/* Mobile Bottom Navigation */}
      {(currentView !== 'login' && currentView !== 'signup') && (
        <nav className="fixed bottom-0 left-0 right-0 z-50 bg-white border-t border-gray-200 shadow-lg lg:hidden">
          <div className="flex justify-around items-center h-16">
            <MobileNavButton view="feed" icon={<Home size={20} />} label="Feed" />
            <MobileNavButton view="search" icon={<Search size={20} />} label="Search" />
            <MobileNavButton view="profile" icon={<User size={20} />} label="Profile" />
            <MobileNavButton view="notifications" icon={<Bell size={20} />} label="Notifications" />
            <MobileNavButton view="messages" icon={<MessageSquare size={20} />} label="Messages" />
          </div>
        </nav>
      )}
    </div>
  );
};

export default App;
ï¿½